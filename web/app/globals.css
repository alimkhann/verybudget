@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
	--aqua: #2BBBAD;
	--coral: #FF6F61;
	--navy: #1B2B4A;
}

html, body {
	height: 100%;
}

body {
	color: #0b1b2f;
	background: #f7fbfb;
	font-feature-settings: "rlig" 1, "calt" 1;
	text-rendering: optimizeLegibility;
}

.container-balanced {
	@apply max-w-3xl mx-auto px-4 sm:px-6;
}

.container-wide {
	@apply max-w-6xl mx-auto px-4 sm:px-6 lg:px-8;
}

.btn-primary {
	@apply inline-flex items-center justify-center rounded-xl bg-aqua px-5 py-3 font-semibold text-white shadow-soft transition-colors hover:bg-aqua-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-aqua-300;
}

.btn-secondary {
	@apply inline-flex items-center justify-center rounded-xl border border-aqua/30 bg-white px-4 py-2 text-navy hover:border-aqua/60 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-aqua-300;
}

.input {
	@apply w-full rounded-xl border border-aqua/30 bg-white px-4 py-3 shadow-sm outline-none ring-0 placeholder:text-gray-400 focus:border-aqua focus:ring-2 focus:ring-aqua-200;
}

.badge {
	@apply inline-flex items-center gap-2 rounded-xl bg-aqua/10 px-3 py-2 text-sm font-medium text-navy;
}

/* Glass effect with subtle noise */
.glass-header {
	background: rgba(255, 255, 255, 0.6);
	backdrop-filter: blur(16px);
	border: 1px solid rgba(43, 187, 173, 0.15);
}

.glass-header::before {
	content: '';
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.02'/%3E%3C/svg%3E");
	pointer-events: none;
	z-index: -1;
}

/* Always-on filter with variables */
.orb {
    --orb-blur: 64px;
    --orb-hue: 0deg;
    --orb-sat: 1;
    --orb-bri: 1;
    filter:
      blur(var(--orb-blur))
      hue-rotate(var(--orb-hue))
      saturate(var(--orb-sat))
      brightness(var(--orb-bri));
    will-change: transform, filter;
  }

/* Register animatable custom properties so they tween smoothly */
@property --orb-hue {
    syntax: '<angle>';
    inherits: true;
    initial-value: 0deg;
  }
  @property --orb-sat {
    syntax: '<number>';
    inherits: true;
    initial-value: 1;
  }
  @property --orb-bri {
    syntax: '<number>';
    inherits: true;
    initial-value: 1;
  }
  /* (Optional) only if you plan to animate blur too */
  @property --orb-blur {
    syntax: '<length>';
    inherits: true;
    initial-value: 64px;
  }

/* Only move/scale/rotate here (do NOT touch filter) */
@keyframes ocean-float {
	0%, 100% { transform: translate(0,0) scale(1) rotate(0deg); }
	16.66%   { transform: translate(20px,-30px) scale(1.05) rotate(2deg); }
	33.33%   { transform: translate(-25px,-15px) scale(0.95) rotate(-1deg); }
	50%      { transform: translate(15px,25px)  scale(1.03) rotate(1deg); }
	66.66%   { transform: translate(-20px,10px) scale(0.97) rotate(-2deg); }
	83.33%   { transform: translate(10px,-20px) scale(1.02) rotate(1deg); }
}

@keyframes orb-color {
    0%   { --orb-hue: 0deg;   --orb-sat: 1;   --orb-bri: 1;    }
    25%  { --orb-hue: 90deg;  --orb-sat: 1.15;--orb-bri: 1.06; }
    50%  { --orb-hue: 180deg; --orb-sat: 0.9; --orb-bri: 0.95; }
    75%  { --orb-hue: 270deg; --orb-sat: 1.1; --orb-bri: 1.05; }
    100% { --orb-hue: 360deg; --orb-sat: 1;   --orb-bri: 1;    }
  }

@keyframes grain {
	0%, 100% {
		transform: translate(0, 0);
	}
	10% {
		transform: translate(-5%, -5%);
	}
	20% {
		transform: translate(-10%, 5%);
	}
	30% {
		transform: translate(5%, -10%);
	}
	40% {
		transform: translate(-5%, 15%);
	}
	50% {
		transform: translate(-10%, 5%);
	}
	60% {
		transform: translate(15%, 0%);
	}
	70% {
		transform: translate(0%, 10%);
	}
	80% {
		transform: translate(3%, 15%);
	}
	90% {
		transform: translate(-10%, 10%);
	}
}

.animate-ocean-float {
	animation: ocean-float 15s ease-in-out infinite;
}

.animate-orb-color {
    animation: orb-color 28s linear infinite;
  }

.animate-grain {
	animation: grain 20s steps(10) infinite;
}

/* Custom mobile breakpoint for hiding elements below 500px */
@media (max-width: 500px) {
	.hide-below-500 {
		display: none !important;
	}
}